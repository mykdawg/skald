services:
  agent-workflows:
    build: ./agent-workflows
    ports:
      - '50051:50051'
    command: ['npm', 'run', 'dev']
    restart: always
    volumes:
      - ./agent-workflows/src:/app/src
    environment:
      - AGENT_WORKFLOWS_LLM_API_KEY=${AGENT_WORKFLOWS_LLM_API_KEY}
      - AGENT_WORKFLOWS_LLM_HOST=${AGENT_WORKFLOWS_LLM_HOST}
      - AGENT_WORKFLOWS_LLM_MODEL=${AGENT_WORKFLOWS_LLM_MODEL}
      - AGENT_WORKFLOWS_LLM_TEMPERATURE=${AGENT_WORKFLOWS_LLM_TEMPERATURE}
      - DATABASE_URL=${DATABASE_URL}

  api:
    build: ./api
    ports:
      - '3000:3000'
    command: ['npm', 'run', 'dev']
    restart: always
    volumes:
      - ./api/src:/app/src
      # - ./prisma:/app/prisma
    environment:
      - AGENT_WORKFLOWS_HOST=${AGENT_WORKFLOWS_HOST}
      - CARTESIA_API_KEY=${CARTESIA_API_KEY}
      - MESSAGING_HOST=${MESSAGING_HOST}
      - DATABASE_URL=${DATABASE_URL}

  messaging:
    image: nats
    ports:
      - '8080:8080'
      - '8222:8222'
      - '4222:4222'
    command: '--cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222 -c  /container/nats.conf'
    volumes:
      - ./messaging:/container
    networks: ['nats']

networks:
  nats:
    name: nats
