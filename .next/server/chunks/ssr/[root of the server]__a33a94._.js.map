{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/StoryComposePanel.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"button\": \"StoryComposePanel-module__v-_Nea__button\",\n  \"form\": \"StoryComposePanel-module__v-_Nea__form\",\n  \"textarea\": \"StoryComposePanel-module__v-_Nea__textarea\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/michael.wheelwright/development/smalldreamcollective/skald/skald-next/src/components/StoryComposePanel.tsx"],"sourcesContent":["'use client';\nimport Form from 'next/form';\nimport { useState } from 'react'\nimport styles from './StoryComposePanel.module.css';\n\nasync function sendMessage({ url, message }: { url: string, message: string }) {\n\n  // showOverlay.set(true);\n  try {\n    console.log(`calling send message: ${message}`)\n    console.log(url)\n    const subject = '';\n    const res = await fetch(url + '/story', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        subject: subject,\n        name: `${message}`,\n      }),\n    });\n    console.log(res)\n  } catch (error) {\n    console.error('Error sending message:', error);\n  }\n}\n\nexport function StoryComposePanel({ url }: { url: string }) {\n  const [message, setMessage] = useState('')  \n\n  function handleChange(e: React.ChangeEvent<HTMLTextAreaElement>) {\n    setMessage(e.target.value)\n  }\n\n  return (\n    <Form className={styles.form} action=\"/\" onSubmit={(e) => {\n      e.preventDefault();\n      sendMessage({\n        url,\n        message\n      });\n    }}>\n      <textarea name=\"message\" className={styles.textarea} onChange={(e) => handleChange(e)}></textarea>\n      <button type=\"submit\" className={styles.button}>Submit</button>\n    </Form>\n  )\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKA,eAAe,YAAY,EAAE,GAAG,EAAE,OAAO,EAAoC;IAE3E,yBAAyB;IACzB,IAAI;QACF,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,SAAS;QAC9C,QAAQ,GAAG,CAAC;QACZ,MAAM,UAAU;QAChB,MAAM,MAAM,MAAM,MAAM,MAAM,UAAU;YACtC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,SAAS;gBACT,MAAM,GAAG,SAAS;YACpB;QACF;QACA,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;IAC1C;AACF;AAEO,SAAS,kBAAkB,EAAE,GAAG,EAAmB;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,SAAS,aAAa,CAAyC;QAC7D,WAAW,EAAE,MAAM,CAAC,KAAK;IAC3B;IAEA,qBACE,6WAAC,2PAAA,CAAA,UAAI;QAAC,WAAW,qJAAA,CAAA,UAAM,CAAC,IAAI;QAAE,QAAO;QAAI,UAAU,CAAC;YAClD,EAAE,cAAc;YAChB,YAAY;gBACV;gBACA;YACF;QACF;;0BACE,6WAAC;gBAAS,MAAK;gBAAU,WAAW,qJAAA,CAAA,UAAM,CAAC,QAAQ;gBAAE,UAAU,CAAC,IAAM,aAAa;;;;;;0BACnF,6WAAC;gBAAO,MAAK;gBAAS,WAAW,qJAAA,CAAA,UAAM,CAAC,MAAM;0BAAE;;;;;;;;;;;;AAGtD"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/michael.wheelwright/development/smalldreamcollective/skald/skald-next/src/components/StoryReadPanel.tsx"],"sourcesContent":["'use client';\nimport { wsconnect } from '@nats-io/nats-core';\nimport { useEffect, useState } from 'react';\n\nfunction StoryText({ txt }: { txt: string }) {\n  const massagedText = txt.replace(/\\n/g, '<br>');\n  return <li dangerouslySetInnerHTML={{__html: massagedText}} />;\n}\n\nexport function StoryReadPanel({subject}: {subject: string}) {\n  subject = 'story';\n  const [messages, setMessages] = useState<string[]>([]);\n  useEffect(() => {\n    wsConnect();\n  }, []);\n\n  async function wsConnect() {\n    const nc = await wsconnect({ servers: 'ws://localhost:8080' });\n    const sub = nc.subscribe(subject, {\n      callback: (err, msg) => {\n        if (err) {\n          console.error(err);\n        } else {\n          setMessages((currentMessages) => [\n            ...currentMessages,\n            new TextDecoder().decode(msg.data),\n          ]);\n          // showOverlay.set(false);\n        }\n      },\n    });\n  }\n  \n\n  return (\n    <div className={styles['message-panel']}>\n      test\n      <ul>\n        {messages.map((item, index) => (\n          <StoryText key={index} txt={item} />\n          // <li key={index}>{item.replace(/\\n/g, \"<br>\")}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIA,SAAS,UAAU,EAAE,GAAG,EAAmB;IACzC,MAAM,eAAe,IAAI,OAAO,CAAC,OAAO;IACxC,qBAAO,6WAAC;QAAG,yBAAyB;YAAC,QAAQ;QAAY;;;;;;AAC3D;AAEO,SAAS,eAAe,EAAC,OAAO,EAAoB;IACzD,UAAU;IACV,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACrD,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,eAAe;QACb,MAAM,KAAK,MAAM,CAAA,GAAA,yOAAA,CAAA,YAAS,AAAD,EAAE;YAAE,SAAS;QAAsB;QAC5D,MAAM,MAAM,GAAG,SAAS,CAAC,SAAS;YAChC,UAAU,CAAC,KAAK;gBACd,IAAI,KAAK;oBACP,QAAQ,KAAK,CAAC;gBAChB,OAAO;oBACL,YAAY,CAAC,kBAAoB;+BAC5B;4BACH,IAAI,cAAc,MAAM,CAAC,IAAI,IAAI;yBAClC;gBACD,0BAA0B;gBAC5B;YACF;QACF;IACF;IAGA,qBACE,6WAAC;QAAI,WAAW,MAAM,CAAC,gBAAgB;;YAAE;0BAEvC,6WAAC;0BACE,SAAS,GAAG,CAAC,CAAC,MAAM,sBACnB,6WAAC;wBAAsB,KAAK;uBAAZ;;;;;;;;;;;;;;;;AAM1B"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}